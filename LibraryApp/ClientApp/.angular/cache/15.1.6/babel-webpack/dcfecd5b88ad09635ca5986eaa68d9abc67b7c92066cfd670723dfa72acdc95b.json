{"ast":null,"code":"import * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nexport class DateFormat {\n  transform(date, format) {\n    if (typeof date === 'string') {\n      date = new Date(date);\n    }\n    return moment(date).format(format);\n  }\n}\nDateFormat.ɵfac = function DateFormat_Factory(t) {\n  return new (t || DateFormat)();\n};\nDateFormat.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"dateformat\",\n  type: DateFormat,\n  pure: true\n});","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,QAAQ;;AAKhC,OAAM,MAAOC,UAAU;EACnBC,SAAS,CAACC,IAAU,EAAEC,MAAa;IAC/B,IAAG,OAAOD,IAAI,KAAG,QAAQ,EAAC;MACtBA,IAAI,GAAC,IAAIE,IAAI,CAACF,IAAI,CAAC;;IAEvB,OAAOH,MAAM,CAACG,IAAI,CAAC,CAACC,MAAM,CAACA,MAAM,CAAC;EACtC;;AANSH,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;;QAAVA,UAAU;EAAAK;AAAA","names":["moment","DateFormat","transform","date","format","Date","pure"],"sourceRoot":"","sources":["D:\\mine\\projects\\dotnet-angular\\LibraryApp\\LibraryApp\\ClientApp\\src\\app\\pipes\\date-format.pipe.ts"],"sourcesContent":["import { Pipe,PipeTransform } from \"@angular/core\";\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n    name:'dateformat'\r\n})\r\nexport class DateFormat implements PipeTransform{\r\n    transform(date: Date, format:string) {\r\n        if(typeof date==='string'){\r\n            date=new Date(date)\r\n        }\r\n        return moment(date).format(format);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}