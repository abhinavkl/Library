{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = '';\n    this.books = new BehaviorSubject([]);\n    this.baseUrl = baseUrl;\n  }\n  getBooks() {\n    if (!this.books.value.length) {\n      this.http.get(this.baseUrl + 'books').subscribe(books => {\n        this.books.next(books);\n      });\n    }\n    return this.books.value;\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,WAAW;EAIpBC,YACYC,IAAe,EACHC,OAAe;IAD3B,SAAI,GAAJD,IAAI;IAJhB,YAAO,GAAC,EAAE;IACV,UAAK,GAAC,IAAIH,eAAe,CAAS,EAAE,CAAC;IAMjC,IAAI,CAACI,OAAO,GAACA,OAAO;EACxB;EAEAC,QAAQ;IACJ,IAAG,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,EAAC;MACxB,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,OAAO,GAAC,OAAO,CAAC,CAACM,SAAS,CAACJ,KAAK,IAAE;QACzD,IAAI,CAACA,KAAK,CAACK,IAAI,CAACL,KAAK,CAAC;MAC1B,CAAC,CAAC;;IAEN,OAAO,IAAI,CAACA,KAAK,CAACC,KAAK;EAC3B;;AAlBSN,WAAW;mBAAXA,WAAW,0CAMR,UAAU;AAAA;AANbA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFT;AAAM","names":["BehaviorSubject","BookService","constructor","http","baseUrl","getBooks","books","value","length","get","subscribe","next","factory","providedIn"],"sourceRoot":"","sources":["D:\\mine\\projects\\dotnet-angular\\LibraryApp\\LibraryApp\\ClientApp\\src\\app\\components\\books\\books\\books.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Book } from \"src/app/models/library.model\";\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class BookService{\r\n    baseUrl=''\r\n    books=new BehaviorSubject<Book[]>([])\r\n    \r\n    constructor(\r\n        private http:HttpClient,\r\n        @Inject('BASE_URL') baseUrl: string\r\n    ){\r\n        this.baseUrl=baseUrl\r\n    }\r\n\r\n    getBooks(){\r\n        if(!this.books.value.length){\r\n            this.http.get<Book[]>(this.baseUrl+'books').subscribe(books=>{\r\n                this.books.next(books);\r\n            })\r\n        }\r\n        return this.books.value;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}